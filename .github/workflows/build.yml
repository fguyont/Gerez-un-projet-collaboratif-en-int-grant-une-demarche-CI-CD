name: Build

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, reopened, synchronize]

jobs:

  backend-test:
    runs-on: ubuntu-latest

    steps:
    
      - name : Repository checkout
        uses: actions/checkout@v4

      - name: Java 17 setup      
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Backend project build
        working-directory: ./back
        run: mvn clean install

      - name: Backend test
        working-directory: ./back
        run: mvn test

      - name: Backend test results upload
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-report
          path: ./back/target/site/jacoco/

  backend-analyse:
      runs-on: ubuntu-latest
      
      steps:
      
      - name : Repository checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Java 17 setup
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
          
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      - name: Build and analyze
        working-directory: ./back
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=fguyont_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD_back

  frontend-test:
    runs-on: ubuntu-latest

    steps:
    
    - name : Repository checkout
      uses: actions/checkout@v4
      
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: ./front/package-lock.json
        
    - name: Dependencies clean install
      working-directory: ./front
      run: npm ci
      
    - name: Frontend project build
      working-directory: ./front
      run: npm run build --if-present
      
    - name: Frontend test
      working-directory: ./front
      run: npm test -- --browsers=ChromeHeadless --watch=false --code-coverage
      
    - name: Frontend test results upload
      uses: actions/upload-artifact@v4
      with:
        name: frontend-test-report
        path: ./front/coverage/bobapp/

  frontend-analyse:
    runs-on: ubuntu-latest
    
    steps:

    - name : Repository checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: ./front/package-lock.json
        
    - name: Dependencies clean install
      working-directory: ./front
      run: npm ci
      
    - name: Frontend project build
      working-directory: ./front
      run: npm run build --if-present
      
    - name: Frontend test
      working-directory: ./front
      run: npm test -- --browsers=ChromeHeadless --watch=false --code-coverage
        
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@v2.2.0
      with:
        projectBaseDir: ./front
        args: >
          -Dsonar.organization=fguyont
          -Dsonar.projectKey=fguyont_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD_front
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deployment:
    runs-on: ubuntu-latest
    needs:
      - backend-test
      - frontend-test
      - backend-analyse
      - frontend-analyse
      
    steps:
      
      -  name: Repository checkout
         uses: actions/checkout@v4
      
      -  name: Login to Docker Hub
         uses: docker/login-action@v3
         with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      -  name: Set up Docker Buildx
         uses: docker/setup-buildx-action@v3
      
      -  name: Backend build and push
         uses: docker/build-push-action@v5
         with:
          context: ./back
          file: ./back/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-back:latest
      
      -  name: Frontend build and push
         uses: docker/build-push-action@v5
         with:
          context: ./front
          file: ./front/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-front:latest
